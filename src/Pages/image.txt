  const handleUpLoad = async (e) =>{
    e.preventDefault();
    try{
      const response = await upLoadFile(file)
      setFileName(response)
      console.log (response)
    }
    catch (e){
      console.error(e)
    }
  }

  const storageRef = firebase.storage().ref(`productos/${imagen.name}`);
      await storageRef.put(imagen);
      const url = await storageRef.getDownloadURL();

  const [fileName, setFileName] = useState()
  const [file, setFile] = useState(null);

  import React, { useState } from 'react';
import firebase from 'firebase/app';
import 'firebase/firestore';
import 'firebase/storage';

function CrearProducto() {
  const [nombre, setNombre] = useState('');
  const [descripcion, setDescripcion] = useState('');
  const [imagen, setImagen] = useState(null);
  const [imagenURL, setImagenURL] = useState('');

  const handleNombreChange = (e) => {
    setNombre(e.target.value);
  };

  const handleDescripcionChange = (e) => {
    setDescripcion(e.target.value);
  };

  const handleImagenChange = (e) => {
    if (e.target.files[0]) {
      setImagen(e.target.files[0]);
    }
  };

  const handleCrearProducto = async () => {
    try {
      // Subir la imagen a Firebase Storage
      const storageRef = firebase.storage().ref(`productos/${imagen.name}`);
      await storageRef.put(imagen);
      const url = await storageRef.getDownloadURL();

      // Crear el documento en Firestore
      const producto = {
        nombre,
        descripcion,
        imagenURL: url,
      };
      await firebase.firestore().collection('productos').add(producto);

      // Limpiar los campos después de la creación
      setNombre('');
      setDescripcion('');
      setImagen(null);
      setImagenURL('');
    } catch (error) {
      console.error('Error al crear el producto:', error);
    }
  };

  return (
    <div>
      <h2>Crear Producto</h2>
      <label>Nombre:</label>
      <input type="text" value={nombre} onChange={handleNombreChange} />
      <br />
      <label>Descripción:</label>
      <textarea value={descripcion} onChange={handleDescripcionChange} />
      <br />
      <label>Imagen:</label>
      <input type="file" onChange={handleImagenChange} />
      <br />
      {imagenURL && <img src={imagenURL} alt="Producto" />}
      <br />
      <button onClick={handleCrearProducto}>Crear Producto</button>
    </div>
  );
}

export default CrearProducto;
